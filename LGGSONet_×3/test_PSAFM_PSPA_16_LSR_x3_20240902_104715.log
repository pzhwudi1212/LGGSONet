2024-09-02 10:47:15,339 INFO: 
                ____                _       _____  ____
               / __ ) ____ _ _____ (_)_____/ ___/ / __ \
              / __  |/ __ `// ___// // ___/\__ \ / /_/ /
             / /_/ // /_/ /(__  )/ // /__ ___/ // _, _/
            /_____/ \__,_//____//_/ \___//____//_/ |_|
     ______                   __   __                 __      __
    / ____/____   ____   ____/ /  / /   __  __ _____ / /__   / /
   / / __ / __ \ / __ \ / __  /  / /   / / / // ___// //_/  / /
  / /_/ // /_/ // /_/ // /_/ /  / /___/ /_/ // /__ / /<    /_/
  \____/ \____/ \____/ \____/  /_____/\____/ \___//_/|_|  (_)
    
Version Information: 
	BasicSR: 1.4.2
	PyTorch: 2.3.1
	TorchVision: 0.18.1
2024-09-02 10:47:15,340 INFO: 
  name: PSAFM_PSPA_16_LSR_x3
  model_type: SRModel
  num_gpu: 1
  manual_seed: 0
  bit: 0
  network_g:[
    type: DLGSANet
    upscale: 3
    in_chans: 3
    dim: 48
    groups: 4
    blocks: 3
    buildblock_type: sparseedge
    window_size: 7
    idynamic_num_heads: 6
    idynamic_ffn_type: GDFN
    idynamic_ffn_expansion_factor: 2.0
    idynamic: True
    restormer_num_heads: 6
    restormer_ffn_type: GDFN
    restormer_ffn_expansion_factor: 2.0
    tlc_flag: True
    tlc_kernel: 72
    activation: relu
    body_norm: False
    img_range: 1.0
    upsampler: pixelshuffledirect
    num_in_ch: 3
    num_out_ch: 3
    task: lsr
  ]
  path:[
    pretrain_network_g: experiments/PSAFM_PSPA_16_LSR_x3/models/net_g_latest.pth
    strict_load_g: True
    resume_state: None
    results_root: D:\Graduate\Code\PyCharm\FriedRiceLab\results\PSAFM_PSPA_16_LSR_x3
    log: D:\Graduate\Code\PyCharm\FriedRiceLab\results\PSAFM_PSPA_16_LSR_x3
    visualization: D:\Graduate\Code\PyCharm\FriedRiceLab\results\PSAFM_PSPA_16_LSR_x3\visualization
  ]
  train:[
    gt_size: 144
    batch_size_per_gpu: 16
    total_iter: 1000000
    optim_g:[
      type: Adam
      lr: 0.0005
      weight_decay: 0
      betas: [0.9, 0.999]
    ]
    scheduler:[
      type: MultiStepLR
      milestones: [250000, 400000, 450000, 475000]
      gamma: 0.5
    ]
    pixel_opt:[
      type: L1Loss
      loss_weight: 1.0
      reduction: mean
    ]
  ]
  val:[
    val_freq: 10000.0
    save_img: False
    suffix: None
    metrics:[
      psnr:[
        type: calculate_psnr
        crop_border: 4
        test_y_channel: True
      ]
      ssim:[
        type: calculate_ssim
        crop_border: 4
        test_y_channel: True
      ]
    ]
  ]
  task_name: LSR_x3
  scale: 3
  num_in_ch: 3
  num_out_ch: 3
  task: lsr
  hook_layer_type: Conv2d
  datasets:[
    train:[
      name: DIV2K_train
      type: IRDataset
      dataroot_gt: datasets/sr_data/DF2K/train/HR/x.lmdb
      dataroot_lq: datasets/sr_data/DF2K/train/LR/x3.lmdb
      meta_info_file: datasets/meta_info/DIV2K_train.txt
      io_backend:[
        type: lmdb
      ]
      extra_datasets:[
        extra_0:[
          name: Flickr2K_train
          dataroot_gt: datasets/sr_data/DF2K/train/HR/x.lmdb
          dataroot_lq: datasets/sr_data/DF2K/train/LR/x3.lmdb
          meta_info_file: datasets/meta_info/Flickr2K_train.txt
          io_backend:[
            type: lmdb
          ]
        ]
      ]
      use_hflip: True
      use_rot: True
      use_shuffle: True
      num_worker_per_gpu: 4
      dataset_enlarge_ratio: 100
      prefetch_mode: None
      phase: train
      scale: 3
    ]
    val_0:[
      name: DF2K_val_10
      type: IRDataset
      dataroot_gt: datasets/sr_data/DF2K/val/HR/x.lmdb
      dataroot_lq: datasets/sr_data/DF2K/val/LR/x3.lmdb
      meta_info_file: datasets/meta_info/DF2K_val_10.txt
      io_backend:[
        type: lmdb
      ]
      phase: val
      scale: 3
    ]
  ]
  test_datasets:[
    test_1:[
      name: Set5
      type: IRDataset
      dataroot_gt: datasets/sr_data/Set5/HR/x3.lmdb
      dataroot_lq: datasets/sr_data/Set5/LR/x3.lmdb
      io_backend:[
        type: lmdb
      ]
    ]
    test_2:[
      name: Set14
      type: IRDataset
      dataroot_gt: datasets/sr_data/Set14/HR/x3.lmdb
      dataroot_lq: datasets/sr_data/Set14/LR/x3.lmdb
      io_backend:[
        type: lmdb
      ]
    ]
    test_3:[
      name: BSD100
      type: IRDataset
      dataroot_gt: datasets/sr_data/BSD100/HR/x3.lmdb
      dataroot_lq: datasets/sr_data/BSD100/LR/x3.lmdb
      io_backend:[
        type: lmdb
      ]
    ]
    test_4:[
      name: Urban100
      type: IRDataset
      dataroot_gt: datasets/sr_data/Urban100/HR/x3.lmdb
      dataroot_lq: datasets/sr_data/Urban100/LR/x3.lmdb
      io_backend:[
        type: lmdb
      ]
    ]
    test_5:[
      name: Manga109
      type: IRDataset
      dataroot_gt: datasets/sr_data/Manga109/HR/x3.lmdb
      dataroot_lq: datasets/sr_data/Manga109/LR/x3.lmdb
      io_backend:[
        type: lmdb
      ]
    ]
  ]
  analyse_datasets:[
    analyse_0:[
      name: Demo_Set5
      type: IRDataset
      dataroot_gt: datasets/demo_data/Demo_Set5/HR/x3
      dataroot_lq: datasets/demo_data/Demo_Set5/LR/x3
      io_backend:[
        type: disk
      ]
    ]
  ]
  infer_datasets:[
    infer_0:[
      name: Set5_GT
      type: IRDataset
      dataroot_gt: datasets/demo_data/Demo_Set5/HR/x3
      io_backend:[
        type: disk
      ]
    ]
  ]
  cka_datasets:[
    cka_0:[
      name: DF2K_val
      type: IRDataset
      dataroot_gt: datasets/sr_data/DF2K/val/HR/x.lmdb
      dataroot_lq: datasets/sr_data/DF2K/val/LR/x3.lmdb
      meta_info_file: datasets/meta_info/DF2K_val.txt
      io_backend:[
        type: lmdb
      ]
      input_size: 288
    ]
  ]
  mad_datasets:[
    mad_0:[
      name: DF2K_val
      type: IRDataset
      dataroot_gt: datasets/sr_data/DF2K/val/HR/x.lmdb
      dataroot_lq: datasets/sr_data/DF2K/val/LR/x3.lmdb
      meta_info_file: datasets/meta_info/DF2K_val.txt
      io_backend:[
        type: lmdb
      ]
      input_size: 288
    ]
  ]
  interpret_imgs:[
    img_0:[
      img_path: datasets/demo_data/Urban7/7.png
      w: 110
      h: 150
    ]
  ]
  logger:[
    print_freq: 2000
    save_checkpoint_freq: 10000.0
    use_tb_logger: False
    wandb:[
      project: None
      resume_id: None
    ]
  ]
  dist_params:[
    backend: nccl
    port: 4000
  ]
  dist: False
  rank: 0
  world_size: 1
  auto_resume: False
  is_train: False

2024-09-02 10:47:15,345 INFO: Dataset [IRDataset] - Set5 is built.
2024-09-02 10:47:15,345 INFO: Number of test images in Set5: 5
2024-09-02 10:47:15,350 INFO: Dataset [IRDataset] - Set14 is built.
2024-09-02 10:47:15,350 INFO: Number of test images in Set14: 14
2024-09-02 10:47:15,354 INFO: Dataset [IRDataset] - BSD100 is built.
2024-09-02 10:47:15,354 INFO: Number of test images in BSD100: 100
2024-09-02 10:47:15,358 INFO: Dataset [IRDataset] - Urban100 is built.
2024-09-02 10:47:15,358 INFO: Number of test images in Urban100: 100
2024-09-02 10:47:15,362 INFO: Dataset [IRDataset] - Manga109 is built.
2024-09-02 10:47:15,362 INFO: Number of test images in Manga109: 109
2024-09-02 10:47:15,386 INFO: Network [DLGSANet] is created.
2024-09-02 10:47:15,512 INFO: Network: DLGSANet, with parameters: 764,403
2024-09-02 10:47:15,512 INFO: DLGSANet(
  (overlap_embed): Sequential(
    (0): OverlapPatchEmbed(
      (proj): Conv2d(3, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
  )
  (deep_feature_extraction): Sequential(
    (0): BuildBlock(
      dim=48, blocks=3, buildblock_type=sparseedge, window_size=7, num_heads=(6, 6), ffn_type=('GDFN', 'GDFN'), ffn_expansion=(2.0, 2.0), idynamic=True, tlc=True
      (body): Sequential(
        (0): SAFMLayerBlock(
          (safm): SAFM(
            (mfr): ModuleList(
              (0-3): 4 x Conv2d(12, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=12)
            )
            (aggr): Conv2d(48, 48, kernel_size=(1, 1), stride=(1, 1))
            (act): GELU(approximate='none')
            (gap): AdaptiveAvgPool2d(output_size=1)
            (softmax): Softmax(dim=2)
            (Sigmoid): Sigmoid()
            (SE1): Conv2d(12, 12, kernel_size=(1, 1), stride=(1, 1))
            (SE2): Conv2d(12, 12, kernel_size=(1, 1), stride=(1, 1))
            (SE3): Conv2d(12, 12, kernel_size=(1, 1), stride=(1, 1))
            (SE4): Conv2d(12, 12, kernel_size=(1, 1), stride=(1, 1))
          )
          (norm5): LayerNorm(
            (body): WithBias_LayerNorm()
          )
          (norm6): LayerNorm(
            (body): WithBias_LayerNorm()
          )
          (restormer_ffn): FeedForward(
            (project_in): Conv2d(48, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dwconv): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
            (project_out): Conv2d(96, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
          )
        )
        (1): SparseAttentionLayerBlock(
          (norm3): LayerNorm(
            (body): WithBias_LayerNorm()
          )
          (restormer_attn): SparseAttention(
            (qkv): Conv2d(48, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (qkv_dwconv): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=144, bias=False)
            (qkv_dwconv_pzh): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=144, bias=False)
            (pwconv): Conv2d(144, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (project_out): Conv2d(48, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (norm5): LayerNorm(
              (body): WithBias_LayerNorm()
            )
            (act): ReLU()
            (act_pzh): LeakyReLU(negative_slope=0.01)
          )
          (norm4): LayerNorm(
            (body): WithBias_LayerNorm()
          )
          (restormer_ffn): FeedForward(
            (project_in): Conv2d(48, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dwconv): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
            (project_out): Conv2d(96, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
          )
        )
        (2): SAFMLayerBlock(
          (safm): SAFM(
            (mfr): ModuleList(
              (0-3): 4 x Conv2d(12, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=12)
            )
            (aggr): Conv2d(48, 48, kernel_size=(1, 1), stride=(1, 1))
            (act): GELU(approximate='none')
            (gap): AdaptiveAvgPool2d(output_size=1)
            (softmax): Softmax(dim=2)
            (Sigmoid): Sigmoid()
            (SE1): Conv2d(12, 12, kernel_size=(1, 1), stride=(1, 1))
            (SE2): Conv2d(12, 12, kernel_size=(1, 1), stride=(1, 1))
            (SE3): Conv2d(12, 12, kernel_size=(1, 1), stride=(1, 1))
            (SE4): Conv2d(12, 12, kernel_size=(1, 1), stride=(1, 1))
          )
          (norm5): LayerNorm(
            (body): WithBias_LayerNorm()
          )
          (norm6): LayerNorm(
            (body): WithBias_LayerNorm()
          )
          (restormer_ffn): FeedForward(
            (project_in): Conv2d(48, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dwconv): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
            (project_out): Conv2d(96, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
          )
        )
        (3): SparseAttentionLayerBlock(
          (norm3): LayerNorm(
            (body): WithBias_LayerNorm()
          )
          (restormer_attn): SparseAttention(
            (qkv): Conv2d(48, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (qkv_dwconv): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=144, bias=False)
            (qkv_dwconv_pzh): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=144, bias=False)
            (pwconv): Conv2d(144, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (project_out): Conv2d(48, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (norm5): LayerNorm(
              (body): WithBias_LayerNorm()
            )
            (act): ReLU()
            (act_pzh): LeakyReLU(negative_slope=0.01)
          )
          (norm4): LayerNorm(
            (body): WithBias_LayerNorm()
          )
          (restormer_ffn): FeedForward(
            (project_in): Conv2d(48, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dwconv): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
            (project_out): Conv2d(96, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
          )
        )
        (4): SAFMLayerBlock(
          (safm): SAFM(
            (mfr): ModuleList(
              (0-3): 4 x Conv2d(12, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=12)
            )
            (aggr): Conv2d(48, 48, kernel_size=(1, 1), stride=(1, 1))
            (act): GELU(approximate='none')
            (gap): AdaptiveAvgPool2d(output_size=1)
            (softmax): Softmax(dim=2)
            (Sigmoid): Sigmoid()
            (SE1): Conv2d(12, 12, kernel_size=(1, 1), stride=(1, 1))
            (SE2): Conv2d(12, 12, kernel_size=(1, 1), stride=(1, 1))
            (SE3): Conv2d(12, 12, kernel_size=(1, 1), stride=(1, 1))
            (SE4): Conv2d(12, 12, kernel_size=(1, 1), stride=(1, 1))
          )
          (norm5): LayerNorm(
            (body): WithBias_LayerNorm()
          )
          (norm6): LayerNorm(
            (body): WithBias_LayerNorm()
          )
          (restormer_ffn): FeedForward(
            (project_in): Conv2d(48, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dwconv): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
            (project_out): Conv2d(96, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
          )
        )
        (5): SparseAttentionLayerBlock(
          (norm3): LayerNorm(
            (body): WithBias_LayerNorm()
          )
          (restormer_attn): SparseAttention(
            (qkv): Conv2d(48, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (qkv_dwconv): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=144, bias=False)
            (qkv_dwconv_pzh): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=144, bias=False)
            (pwconv): Conv2d(144, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (project_out): Conv2d(48, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (norm5): LayerNorm(
              (body): WithBias_LayerNorm()
            )
            (act): ReLU()
            (act_pzh): LeakyReLU(negative_slope=0.01)
          )
          (norm4): LayerNorm(
            (body): WithBias_LayerNorm()
          )
          (restormer_ffn): FeedForward(
            (project_in): Conv2d(48, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dwconv): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
            (project_out): Conv2d(96, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
          )
        )
        (6): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (1): BuildBlock(
      dim=48, blocks=3, buildblock_type=sparseedge, window_size=7, num_heads=(6, 6), ffn_type=('GDFN', 'GDFN'), ffn_expansion=(2.0, 2.0), idynamic=True, tlc=True
      (body): Sequential(
        (0): SAFMLayerBlock(
          (safm): SAFM(
            (mfr): ModuleList(
              (0-3): 4 x Conv2d(12, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=12)
            )
            (aggr): Conv2d(48, 48, kernel_size=(1, 1), stride=(1, 1))
            (act): GELU(approximate='none')
            (gap): AdaptiveAvgPool2d(output_size=1)
            (softmax): Softmax(dim=2)
            (Sigmoid): Sigmoid()
            (SE1): Conv2d(12, 12, kernel_size=(1, 1), stride=(1, 1))
            (SE2): Conv2d(12, 12, kernel_size=(1, 1), stride=(1, 1))
            (SE3): Conv2d(12, 12, kernel_size=(1, 1), stride=(1, 1))
            (SE4): Conv2d(12, 12, kernel_size=(1, 1), stride=(1, 1))
          )
          (norm5): LayerNorm(
            (body): WithBias_LayerNorm()
          )
          (norm6): LayerNorm(
            (body): WithBias_LayerNorm()
          )
          (restormer_ffn): FeedForward(
            (project_in): Conv2d(48, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dwconv): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
            (project_out): Conv2d(96, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
          )
        )
        (1): SparseAttentionLayerBlock(
          (norm3): LayerNorm(
            (body): WithBias_LayerNorm()
          )
          (restormer_attn): SparseAttention(
            (qkv): Conv2d(48, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (qkv_dwconv): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=144, bias=False)
            (qkv_dwconv_pzh): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=144, bias=False)
            (pwconv): Conv2d(144, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (project_out): Conv2d(48, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (norm5): LayerNorm(
              (body): WithBias_LayerNorm()
            )
            (act): ReLU()
            (act_pzh): LeakyReLU(negative_slope=0.01)
          )
          (norm4): LayerNorm(
            (body): WithBias_LayerNorm()
          )
          (restormer_ffn): FeedForward(
            (project_in): Conv2d(48, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dwconv): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
            (project_out): Conv2d(96, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
          )
        )
        (2): SAFMLayerBlock(
          (safm): SAFM(
            (mfr): ModuleList(
              (0-3): 4 x Conv2d(12, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=12)
            )
            (aggr): Conv2d(48, 48, kernel_size=(1, 1), stride=(1, 1))
            (act): GELU(approximate='none')
            (gap): AdaptiveAvgPool2d(output_size=1)
            (softmax): Softmax(dim=2)
            (Sigmoid): Sigmoid()
            (SE1): Conv2d(12, 12, kernel_size=(1, 1), stride=(1, 1))
            (SE2): Conv2d(12, 12, kernel_size=(1, 1), stride=(1, 1))
            (SE3): Conv2d(12, 12, kernel_size=(1, 1), stride=(1, 1))
            (SE4): Conv2d(12, 12, kernel_size=(1, 1), stride=(1, 1))
          )
          (norm5): LayerNorm(
            (body): WithBias_LayerNorm()
          )
          (norm6): LayerNorm(
            (body): WithBias_LayerNorm()
          )
          (restormer_ffn): FeedForward(
            (project_in): Conv2d(48, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dwconv): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
            (project_out): Conv2d(96, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
          )
        )
        (3): SparseAttentionLayerBlock(
          (norm3): LayerNorm(
            (body): WithBias_LayerNorm()
          )
          (restormer_attn): SparseAttention(
            (qkv): Conv2d(48, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (qkv_dwconv): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=144, bias=False)
            (qkv_dwconv_pzh): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=144, bias=False)
            (pwconv): Conv2d(144, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (project_out): Conv2d(48, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (norm5): LayerNorm(
              (body): WithBias_LayerNorm()
            )
            (act): ReLU()
            (act_pzh): LeakyReLU(negative_slope=0.01)
          )
          (norm4): LayerNorm(
            (body): WithBias_LayerNorm()
          )
          (restormer_ffn): FeedForward(
            (project_in): Conv2d(48, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dwconv): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
            (project_out): Conv2d(96, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
          )
        )
        (4): SAFMLayerBlock(
          (safm): SAFM(
            (mfr): ModuleList(
              (0-3): 4 x Conv2d(12, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=12)
            )
            (aggr): Conv2d(48, 48, kernel_size=(1, 1), stride=(1, 1))
            (act): GELU(approximate='none')
            (gap): AdaptiveAvgPool2d(output_size=1)
            (softmax): Softmax(dim=2)
            (Sigmoid): Sigmoid()
            (SE1): Conv2d(12, 12, kernel_size=(1, 1), stride=(1, 1))
            (SE2): Conv2d(12, 12, kernel_size=(1, 1), stride=(1, 1))
            (SE3): Conv2d(12, 12, kernel_size=(1, 1), stride=(1, 1))
            (SE4): Conv2d(12, 12, kernel_size=(1, 1), stride=(1, 1))
          )
          (norm5): LayerNorm(
            (body): WithBias_LayerNorm()
          )
          (norm6): LayerNorm(
            (body): WithBias_LayerNorm()
          )
          (restormer_ffn): FeedForward(
            (project_in): Conv2d(48, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dwconv): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
            (project_out): Conv2d(96, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
          )
        )
        (5): SparseAttentionLayerBlock(
          (norm3): LayerNorm(
            (body): WithBias_LayerNorm()
          )
          (restormer_attn): SparseAttention(
            (qkv): Conv2d(48, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (qkv_dwconv): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=144, bias=False)
            (qkv_dwconv_pzh): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=144, bias=False)
            (pwconv): Conv2d(144, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (project_out): Conv2d(48, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (norm5): LayerNorm(
              (body): WithBias_LayerNorm()
            )
            (act): ReLU()
            (act_pzh): LeakyReLU(negative_slope=0.01)
          )
          (norm4): LayerNorm(
            (body): WithBias_LayerNorm()
          )
          (restormer_ffn): FeedForward(
            (project_in): Conv2d(48, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dwconv): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
            (project_out): Conv2d(96, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
          )
        )
        (6): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (2): BuildBlock(
      dim=48, blocks=3, buildblock_type=sparseedge, window_size=7, num_heads=(6, 6), ffn_type=('GDFN', 'GDFN'), ffn_expansion=(2.0, 2.0), idynamic=True, tlc=True
      (body): Sequential(
        (0): SAFMLayerBlock(
          (safm): SAFM(
            (mfr): ModuleList(
              (0-3): 4 x Conv2d(12, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=12)
            )
            (aggr): Conv2d(48, 48, kernel_size=(1, 1), stride=(1, 1))
            (act): GELU(approximate='none')
            (gap): AdaptiveAvgPool2d(output_size=1)
            (softmax): Softmax(dim=2)
            (Sigmoid): Sigmoid()
            (SE1): Conv2d(12, 12, kernel_size=(1, 1), stride=(1, 1))
            (SE2): Conv2d(12, 12, kernel_size=(1, 1), stride=(1, 1))
            (SE3): Conv2d(12, 12, kernel_size=(1, 1), stride=(1, 1))
            (SE4): Conv2d(12, 12, kernel_size=(1, 1), stride=(1, 1))
          )
          (norm5): LayerNorm(
            (body): WithBias_LayerNorm()
          )
          (norm6): LayerNorm(
            (body): WithBias_LayerNorm()
          )
          (restormer_ffn): FeedForward(
            (project_in): Conv2d(48, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dwconv): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
            (project_out): Conv2d(96, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
          )
        )
        (1): SparseAttentionLayerBlock(
          (norm3): LayerNorm(
            (body): WithBias_LayerNorm()
          )
          (restormer_attn): SparseAttention(
            (qkv): Conv2d(48, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (qkv_dwconv): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=144, bias=False)
            (qkv_dwconv_pzh): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=144, bias=False)
            (pwconv): Conv2d(144, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (project_out): Conv2d(48, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (norm5): LayerNorm(
              (body): WithBias_LayerNorm()
            )
            (act): ReLU()
            (act_pzh): LeakyReLU(negative_slope=0.01)
          )
          (norm4): LayerNorm(
            (body): WithBias_LayerNorm()
          )
          (restormer_ffn): FeedForward(
            (project_in): Conv2d(48, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dwconv): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
            (project_out): Conv2d(96, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
          )
        )
        (2): SAFMLayerBlock(
          (safm): SAFM(
            (mfr): ModuleList(
              (0-3): 4 x Conv2d(12, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=12)
            )
            (aggr): Conv2d(48, 48, kernel_size=(1, 1), stride=(1, 1))
            (act): GELU(approximate='none')
            (gap): AdaptiveAvgPool2d(output_size=1)
            (softmax): Softmax(dim=2)
            (Sigmoid): Sigmoid()
            (SE1): Conv2d(12, 12, kernel_size=(1, 1), stride=(1, 1))
            (SE2): Conv2d(12, 12, kernel_size=(1, 1), stride=(1, 1))
            (SE3): Conv2d(12, 12, kernel_size=(1, 1), stride=(1, 1))
            (SE4): Conv2d(12, 12, kernel_size=(1, 1), stride=(1, 1))
          )
          (norm5): LayerNorm(
            (body): WithBias_LayerNorm()
          )
          (norm6): LayerNorm(
            (body): WithBias_LayerNorm()
          )
          (restormer_ffn): FeedForward(
            (project_in): Conv2d(48, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dwconv): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
            (project_out): Conv2d(96, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
          )
        )
        (3): SparseAttentionLayerBlock(
          (norm3): LayerNorm(
            (body): WithBias_LayerNorm()
          )
          (restormer_attn): SparseAttention(
            (qkv): Conv2d(48, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (qkv_dwconv): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=144, bias=False)
            (qkv_dwconv_pzh): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=144, bias=False)
            (pwconv): Conv2d(144, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (project_out): Conv2d(48, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (norm5): LayerNorm(
              (body): WithBias_LayerNorm()
            )
            (act): ReLU()
            (act_pzh): LeakyReLU(negative_slope=0.01)
          )
          (norm4): LayerNorm(
            (body): WithBias_LayerNorm()
          )
          (restormer_ffn): FeedForward(
            (project_in): Conv2d(48, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dwconv): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
            (project_out): Conv2d(96, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
          )
        )
        (4): SAFMLayerBlock(
          (safm): SAFM(
            (mfr): ModuleList(
              (0-3): 4 x Conv2d(12, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=12)
            )
            (aggr): Conv2d(48, 48, kernel_size=(1, 1), stride=(1, 1))
            (act): GELU(approximate='none')
            (gap): AdaptiveAvgPool2d(output_size=1)
            (softmax): Softmax(dim=2)
            (Sigmoid): Sigmoid()
            (SE1): Conv2d(12, 12, kernel_size=(1, 1), stride=(1, 1))
            (SE2): Conv2d(12, 12, kernel_size=(1, 1), stride=(1, 1))
            (SE3): Conv2d(12, 12, kernel_size=(1, 1), stride=(1, 1))
            (SE4): Conv2d(12, 12, kernel_size=(1, 1), stride=(1, 1))
          )
          (norm5): LayerNorm(
            (body): WithBias_LayerNorm()
          )
          (norm6): LayerNorm(
            (body): WithBias_LayerNorm()
          )
          (restormer_ffn): FeedForward(
            (project_in): Conv2d(48, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dwconv): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
            (project_out): Conv2d(96, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
          )
        )
        (5): SparseAttentionLayerBlock(
          (norm3): LayerNorm(
            (body): WithBias_LayerNorm()
          )
          (restormer_attn): SparseAttention(
            (qkv): Conv2d(48, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (qkv_dwconv): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=144, bias=False)
            (qkv_dwconv_pzh): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=144, bias=False)
            (pwconv): Conv2d(144, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (project_out): Conv2d(48, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (norm5): LayerNorm(
              (body): WithBias_LayerNorm()
            )
            (act): ReLU()
            (act_pzh): LeakyReLU(negative_slope=0.01)
          )
          (norm4): LayerNorm(
            (body): WithBias_LayerNorm()
          )
          (restormer_ffn): FeedForward(
            (project_in): Conv2d(48, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dwconv): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
            (project_out): Conv2d(96, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
          )
        )
        (6): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (3): BuildBlock(
      dim=48, blocks=3, buildblock_type=sparseedge, window_size=7, num_heads=(6, 6), ffn_type=('GDFN', 'GDFN'), ffn_expansion=(2.0, 2.0), idynamic=True, tlc=True
      (body): Sequential(
        (0): SAFMLayerBlock(
          (safm): SAFM(
            (mfr): ModuleList(
              (0-3): 4 x Conv2d(12, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=12)
            )
            (aggr): Conv2d(48, 48, kernel_size=(1, 1), stride=(1, 1))
            (act): GELU(approximate='none')
            (gap): AdaptiveAvgPool2d(output_size=1)
            (softmax): Softmax(dim=2)
            (Sigmoid): Sigmoid()
            (SE1): Conv2d(12, 12, kernel_size=(1, 1), stride=(1, 1))
            (SE2): Conv2d(12, 12, kernel_size=(1, 1), stride=(1, 1))
            (SE3): Conv2d(12, 12, kernel_size=(1, 1), stride=(1, 1))
            (SE4): Conv2d(12, 12, kernel_size=(1, 1), stride=(1, 1))
          )
          (norm5): LayerNorm(
            (body): WithBias_LayerNorm()
          )
          (norm6): LayerNorm(
            (body): WithBias_LayerNorm()
          )
          (restormer_ffn): FeedForward(
            (project_in): Conv2d(48, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dwconv): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
            (project_out): Conv2d(96, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
          )
        )
        (1): SparseAttentionLayerBlock(
          (norm3): LayerNorm(
            (body): WithBias_LayerNorm()
          )
          (restormer_attn): SparseAttention(
            (qkv): Conv2d(48, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (qkv_dwconv): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=144, bias=False)
            (qkv_dwconv_pzh): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=144, bias=False)
            (pwconv): Conv2d(144, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (project_out): Conv2d(48, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (norm5): LayerNorm(
              (body): WithBias_LayerNorm()
            )
            (act): ReLU()
            (act_pzh): LeakyReLU(negative_slope=0.01)
          )
          (norm4): LayerNorm(
            (body): WithBias_LayerNorm()
          )
          (restormer_ffn): FeedForward(
            (project_in): Conv2d(48, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dwconv): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
            (project_out): Conv2d(96, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
          )
        )
        (2): SAFMLayerBlock(
          (safm): SAFM(
            (mfr): ModuleList(
              (0-3): 4 x Conv2d(12, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=12)
            )
            (aggr): Conv2d(48, 48, kernel_size=(1, 1), stride=(1, 1))
            (act): GELU(approximate='none')
            (gap): AdaptiveAvgPool2d(output_size=1)
            (softmax): Softmax(dim=2)
            (Sigmoid): Sigmoid()
            (SE1): Conv2d(12, 12, kernel_size=(1, 1), stride=(1, 1))
            (SE2): Conv2d(12, 12, kernel_size=(1, 1), stride=(1, 1))
            (SE3): Conv2d(12, 12, kernel_size=(1, 1), stride=(1, 1))
            (SE4): Conv2d(12, 12, kernel_size=(1, 1), stride=(1, 1))
          )
          (norm5): LayerNorm(
            (body): WithBias_LayerNorm()
          )
          (norm6): LayerNorm(
            (body): WithBias_LayerNorm()
          )
          (restormer_ffn): FeedForward(
            (project_in): Conv2d(48, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dwconv): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
            (project_out): Conv2d(96, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
          )
        )
        (3): SparseAttentionLayerBlock(
          (norm3): LayerNorm(
            (body): WithBias_LayerNorm()
          )
          (restormer_attn): SparseAttention(
            (qkv): Conv2d(48, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (qkv_dwconv): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=144, bias=False)
            (qkv_dwconv_pzh): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=144, bias=False)
            (pwconv): Conv2d(144, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (project_out): Conv2d(48, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (norm5): LayerNorm(
              (body): WithBias_LayerNorm()
            )
            (act): ReLU()
            (act_pzh): LeakyReLU(negative_slope=0.01)
          )
          (norm4): LayerNorm(
            (body): WithBias_LayerNorm()
          )
          (restormer_ffn): FeedForward(
            (project_in): Conv2d(48, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dwconv): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
            (project_out): Conv2d(96, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
          )
        )
        (4): SAFMLayerBlock(
          (safm): SAFM(
            (mfr): ModuleList(
              (0-3): 4 x Conv2d(12, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=12)
            )
            (aggr): Conv2d(48, 48, kernel_size=(1, 1), stride=(1, 1))
            (act): GELU(approximate='none')
            (gap): AdaptiveAvgPool2d(output_size=1)
            (softmax): Softmax(dim=2)
            (Sigmoid): Sigmoid()
            (SE1): Conv2d(12, 12, kernel_size=(1, 1), stride=(1, 1))
            (SE2): Conv2d(12, 12, kernel_size=(1, 1), stride=(1, 1))
            (SE3): Conv2d(12, 12, kernel_size=(1, 1), stride=(1, 1))
            (SE4): Conv2d(12, 12, kernel_size=(1, 1), stride=(1, 1))
          )
          (norm5): LayerNorm(
            (body): WithBias_LayerNorm()
          )
          (norm6): LayerNorm(
            (body): WithBias_LayerNorm()
          )
          (restormer_ffn): FeedForward(
            (project_in): Conv2d(48, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dwconv): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
            (project_out): Conv2d(96, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
          )
        )
        (5): SparseAttentionLayerBlock(
          (norm3): LayerNorm(
            (body): WithBias_LayerNorm()
          )
          (restormer_attn): SparseAttention(
            (qkv): Conv2d(48, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (qkv_dwconv): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=144, bias=False)
            (qkv_dwconv_pzh): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=144, bias=False)
            (pwconv): Conv2d(144, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (project_out): Conv2d(48, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (norm5): LayerNorm(
              (body): WithBias_LayerNorm()
            )
            (act): ReLU()
            (act_pzh): LeakyReLU(negative_slope=0.01)
          )
          (norm4): LayerNorm(
            (body): WithBias_LayerNorm()
          )
          (restormer_ffn): FeedForward(
            (project_in): Conv2d(48, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (dwconv): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
            (project_out): Conv2d(96, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
          )
        )
        (6): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (4): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
  (upsample): UpsampleOneStep(
    (0): Conv2d(48, 27, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): PixelShuffle(upscale_factor=3)
  )
)
2024-09-02 10:47:15,532 INFO: Loading DLGSANet model from experiments/PSAFM_PSPA_16_LSR_x3/models/net_g_latest.pth, with param key: [params].
2024-09-02 10:47:15,560 INFO: Model [SRModel] is created.
2024-09-02 10:47:15,560 INFO: Testing Set5...
2024-09-02 10:47:17,463 INFO: Validation Set5
	 # psnr: 34.7055	Best: 34.7055 @ PSAFM_PSPA_16_LSR_x3 iter
	 # ssim: 0.9294	Best: 0.9294 @ PSAFM_PSPA_16_LSR_x3 iter

2024-09-02 10:47:17,463 INFO: Testing Set14...
2024-09-02 10:47:21,872 INFO: Validation Set14
	 # psnr: 30.6279	Best: 30.6279 @ PSAFM_PSPA_16_LSR_x3 iter
	 # ssim: 0.8471	Best: 0.8471 @ PSAFM_PSPA_16_LSR_x3 iter

2024-09-02 10:47:21,872 INFO: Testing BSD100...
2024-09-02 10:47:33,762 INFO: Validation BSD100
	 # psnr: 29.2723	Best: 29.2723 @ PSAFM_PSPA_16_LSR_x3 iter
	 # ssim: 0.8093	Best: 0.8093 @ PSAFM_PSPA_16_LSR_x3 iter

2024-09-02 10:47:33,762 INFO: Testing Urban100...
2024-09-02 10:48:15,934 INFO: Validation Urban100
	 # psnr: 28.8520	Best: 28.8520 @ PSAFM_PSPA_16_LSR_x3 iter
	 # ssim: 0.8660	Best: 0.8660 @ PSAFM_PSPA_16_LSR_x3 iter

2024-09-02 10:48:15,936 INFO: Testing Manga109...
2024-09-02 10:49:05,414 INFO: Validation Manga109
	 # psnr: 34.4235	Best: 34.4235 @ PSAFM_PSPA_16_LSR_x3 iter
	 # ssim: 0.9493	Best: 0.9493 @ PSAFM_PSPA_16_LSR_x3 iter

